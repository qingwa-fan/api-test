import base64import osimport smtplibimport datetimefrom email.header import Headerfrom email.mime.text import MIMETextfrom email.mime.multipart import MIMEMultipartfrom email.mime.application import MIMEApplicationfrom common.contants import DATA_DIR, ZIP_DIRfrom common.my_log import Loggerlogging = Logger(__name__).get_logger()class SendEmail():    # 初始化服务器信息    def __init__(self,test_results, total, passed, failed):        # 第三方 SMTP 服务        self.mail_host = 'smtp.qq.com'  # 填写邮箱服务器:这个是qq邮箱服务器，直接使用smtp.qq.com        self.mail_user = '980544635@qq.com'        self.mail_pass = 'pvvnyijupsxbbbcf'  # 填写在qq邮箱设置中获取的授权码        self.sender = '980544635@qq.com'  # 填写发送方邮箱地址        self.receivers = ['zhoujing@gigacloudtech.com']  # 填写收件人的邮箱，QQ邮箱或者其他邮箱，可多个，中间用,隔开        self.test_results = test_results        self.total = total        self.passed = passed        self.failed = failed        #        # , 'tujingjing@gigacloudtech.com,'        # 'zhouxing@gigacloudtech.com', 'pengxiaoyu@gigacloudtech.com',        # 'wangying@gigacloudtech.com', 'fangjing@gigacloudtech.com'    # 以文本的形式发送邮件    def send_email_by_text(self):        html = """        <!DOCTYPE html>        <html>        <head>        <meta charset="utf-8">        <title>FDP_AutoTest_ProJect项目构建信息</title>        </head>        <body>            <h4>大家好,以下是FDP_AutoTest项目测试结果，Allure测试报告在邮件附件中，请使用Pycharm打开查看。</h4>            <p style="font-family:arial;color:green"><b>测试情况</b></p>            <hr>            <ul style="margin-left: 6px;">                <li>项目名称: FDP_test_project</li>                <li>测试环境: sit一期</li>                <li>测试结果: {}</li>                <li>测试执行时间: {}</li>                <li>总用例数: {}</li>                <li>用例通过数: {}</li>                <li>用例失败数: {}</li>            </ul>        </body>        </html>        """.format("pass", datetime.datetime.now(), 4, 0, 0, )        message = MIMEText(html, _subtype='html', _charset='utf-8')        message['Subject'] = Header('FDP接口自动化测试报告', 'utf-8') # 邮件标题        message['From'] = Header(            f'=?utf-8?B?{base64.b64encode("IT_周静".encode()).decode()}=?= <from_address>')  # 必须填发送者邮箱        message['To'] = Header('FDP测试团队', 'utf-8')  # 邮件接收者姓名        self.send_email(message)        # 以文本和附件的形式发送邮件    def send_email_by_att(self):            message = MIMEMultipart()            message['Subject'] = Header('FDP接口自动化测试报告', 'utf-8')  # 邮件标题            message['From'] = Header(                f'=?utf-8?B?{base64.b64encode("IT_周静".encode()).decode()}=?= <980544635@qq.com>')  # 邮件主体中发送者名称            message['To'] = Header('FDP测试团队', "utf-8")  # 邮件主体中接收者名称            html = """    <!DOCTYPE html>    <html>    <head>    <meta charset="utf-8">    <title>FDP_AutoTest_ProJect项目构建信息</title>    </head>    <body>        <h4>大家好,以下是FDP_AutoTest项目测试结果，Allure测试报告在邮件附件中，请使用Pycharm打开查看。</h4>        <p style="font-family:arial;color:green"><b>FDP接口自动化测试执行信息</b></p>        <hr>        <ul style="margin-left: 6px;">            <li>项目名称: FDP_test_project</li>            <li>测试环境: sit一期</li>            <li>测试结果: {}</li>            <li>测试执行时间: {}</li>            <li>总用例数: {}</li>            <li>用例通过数: {}</li>            <li>用例失败数: {}</li>        </ul>    </body>    </html>    """.format(self.test_results, datetime.datetime.now(), self.total, self.passed, self.failed )            body = MIMEText(html, _subtype='html', _charset='utf-8')            message.attach(body)            zip_dir = os.path.join(ZIP_DIR, "report.zip")            att_body = open(zip_dir)  # 以二进制的格式打开附件            att = MIMEApplication(att_body.read())  # 导入附件            att_body.close()            att.add_header('Content-Disposition', 'attachment', filename='allure测试报告.zip')  # 添加附件名称            message.attach(att)            self.send_email(message)    # 登录并进行发送    def send_email(self, message):        # 进行登录发送        try:            smtpobj = smtplib.SMTP_SSL(self.mail_host)            smtpobj.connect(self.mail_host, 465)            smtpobj.login(self.sender, self.mail_pass)            smtpobj.sendmail(self.sender, self.receivers, message.as_string())            smtpobj.quit()            logging.info('邮件发送成功！！')        except Exception as e:            logging.error(f'邮件发送失败！！,error: {e}')            raise e