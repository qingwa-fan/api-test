{"uid":"aaf7d661137d5e51","name":"test_excute[case_info0]","fullName":"Walmart.framework#test_excute","historyId":"d5325067bce968f6ee7f9b73a98560ea","time":{"start":1742553393598,"stop":1742553393823,"duration":225},"status":"failed","statusMessage":"AssertionError: 状态码不匹配，实际状态码: 401\nassert 401 == 201\n +  where 401 = <Response [401]>.status_code\n +  and   201 = int(201)","statusTrace":"case_info = {'URL地址': 'https://api-test.xnurta.com/walmart-api/campaign/total/', '接口描述': 'total 接口', '用例编号': '广告管理_001', '请求参数': '...te\": \"20241231\",\\n        \"campaignStatuses\": [],\\n        \"campaignIdXs\": [],\\n        \"campaignIds\": []\\n    }', ...}\n\n    @pytest.mark.parametrize(\"case_info\",test_date)   #参数化\n    def test_excute(case_info):\n        headers={\n        \"Accept\": \"application/json, text/plain, */*\",\n        \"Content-type\": \"application/json\",\n        \"Accept-encoding\": \"gzip, deflate, br, zstd\",\n        \"Accept-language\": \"zh-CN,zh;q=0.9,ru;q=0.8,nl;q=0.7,ko;q=0.6,ja;q=0.5,en;q=0.4,es;q=0.3,en-GB;q=0.2,en-US;q=0.1\",\n        \"Authorization\": token,\n        \"Dow\": \"1\",\n        \"Profileid\": \"16333544\",\n        \"User-agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36\",\n        \"Cache-control\": \"no-cache\",\n    }\n        response = requests.request(url=case_info[\"URL地址\"],\n                                    method=case_info[\"请求方式\"],\n                                    headers=headers,\n                                    json=eval(case_info[\"请求参数\"])) #eval 格式化函数，根据你的 json 格式，自动转成对应的数据类型\n        print(response.text)\n        # 断言状态码\n>       assert response.status_code == int(case_info[\"预期状态码\"]),f\"状态码不匹配，实际状态码: {response.status_code}\"\nE       AssertionError: 状态码不匹配，实际状态码: 401\nE       assert 401 == 201\nE        +  where 401 = <Response [401]>.status_code\nE        +  and   201 = int(201)\n\nWalmart/framework.py:40: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: 状态码不匹配，实际状态码: 401\nassert 401 == 201\n +  where 401 = <Response [401]>.status_code\n +  and   201 = int(201)","statusTrace":"case_info = {'URL地址': 'https://api-test.xnurta.com/walmart-api/campaign/total/', '接口描述': 'total 接口', '用例编号': '广告管理_001', '请求参数': '...te\": \"20241231\",\\n        \"campaignStatuses\": [],\\n        \"campaignIdXs\": [],\\n        \"campaignIds\": []\\n    }', ...}\n\n    @pytest.mark.parametrize(\"case_info\",test_date)   #参数化\n    def test_excute(case_info):\n        headers={\n        \"Accept\": \"application/json, text/plain, */*\",\n        \"Content-type\": \"application/json\",\n        \"Accept-encoding\": \"gzip, deflate, br, zstd\",\n        \"Accept-language\": \"zh-CN,zh;q=0.9,ru;q=0.8,nl;q=0.7,ko;q=0.6,ja;q=0.5,en;q=0.4,es;q=0.3,en-GB;q=0.2,en-US;q=0.1\",\n        \"Authorization\": token,\n        \"Dow\": \"1\",\n        \"Profileid\": \"16333544\",\n        \"User-agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36\",\n        \"Cache-control\": \"no-cache\",\n    }\n        response = requests.request(url=case_info[\"URL地址\"],\n                                    method=case_info[\"请求方式\"],\n                                    headers=headers,\n                                    json=eval(case_info[\"请求参数\"])) #eval 格式化函数，根据你的 json 格式，自动转成对应的数据类型\n        print(response.text)\n        # 断言状态码\n>       assert response.status_code == int(case_info[\"预期状态码\"]),f\"状态码不匹配，实际状态码: {response.status_code}\"\nE       AssertionError: 状态码不匹配，实际状态码: 401\nE       assert 401 == 201\nE        +  where 401 = <Response [401]>.status_code\nE        +  and   201 = int(201)\n\nWalmart/framework.py:40: AssertionError","steps":[],"attachments":[{"uid":"fb66bf9d6aaa05d3","name":"stdout","source":"fb66bf9d6aaa05d3.txt","type":"text/plain","size":27}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"attachmentStep":false,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"Walmart"},{"name":"suite","value":"framework"},{"name":"host","value":"MacBook-Pro.local"},{"name":"thread","value":"11063-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Walmart.framework"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"case_info","value":"{'用例编号': '广告管理_001', '接口描述': 'total 接口', 'URL地址': 'https://api-test.xnurta.com/walmart-api/campaign/total/', '请求方式': 'POST', '请求参数': '{\\n        \"startDate\": \"20250101\",\\n        \"endDate\": \"20250317\",\\n        \"periodType\": \"DAY\",\\n        \"name\": \"\",\\n        \"types\": [],\\n        \"days\": 14,\\n        \"searchType\": None,\\n        \"itemIds\": [],\\n        \"itemType\": 1,\\n        \"searchContents\": None,\\n        \"enableCompare\": True,\\n        \"prevStartDate\": \"20241017\",\\n        \"prevEndDate\": \"20241231\",\\n        \"campaignStatuses\": [],\\n        \"campaignIdXs\": [],\\n        \"campaignIds\": []\\n    }', '预期状态码': 201}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"aaf7d661137d5e51.json","parameterValues":["{'用例编号': '广告管理_001', '接口描述': 'total 接口', 'URL地址': 'https://api-test.xnurta.com/walmart-api/campaign/total/', '请求方式': 'POST', '请求参数': '{\\n        \"startDate\": \"20250101\",\\n        \"endDate\": \"20250317\",\\n        \"periodType\": \"DAY\",\\n        \"name\": \"\",\\n        \"types\": [],\\n        \"days\": 14,\\n        \"searchType\": None,\\n        \"itemIds\": [],\\n        \"itemType\": 1,\\n        \"searchContents\": None,\\n        \"enableCompare\": True,\\n        \"prevStartDate\": \"20241017\",\\n        \"prevEndDate\": \"20241231\",\\n        \"campaignStatuses\": [],\\n        \"campaignIdXs\": [],\\n        \"campaignIds\": []\\n    }', '预期状态码': 201}"]}