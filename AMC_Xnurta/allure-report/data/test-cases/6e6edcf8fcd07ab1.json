{
  "uid" : "6e6edcf8fcd07ab1",
  "name" : "test_Export[SearchTermAnalysisOverall]",
  "fullName" : "TestCase.AMCModelGallery.SearchTermAnalysis.test_Excel.TestExcel#test_Export",
  "historyId" : "ec11bb868855972f1ba8a4268dd826c1",
  "time" : {
    "start" : 1742520823526,
    "stop" : 1742520835701,
    "duration" : 12175
  },
  "description" : "搜索词分析模型底部excel",
  "descriptionHtml" : "<p>搜索词分析模型底部excel</p>\n",
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <i data-v-6f53ffbd=\"\" data-v-4b773e76=\"\" class=\"el-tooltip el-icon-download xp-export\" aria-describedby=\"el-tooltip-5957\" tabindex=\"null\"></i> is not clickable at point (1998, 868). Other element would receive the click: <div class=\"el-loading-mask el-loading-fade-leave-active el-loading-fade-leave-to\" style=\"\">...</div>\n  (Session info: chrome=134.0.6998.89)\nStacktrace:\n\tGetHandleVerifier [0x004DB5A3+24387]\n\t(No symbol) [0x00465904]\n\t(No symbol) [0x00340753]\n\t(No symbol) [0x0038EE50]\n\t(No symbol) [0x0038D1F4]\n\t(No symbol) [0x0038AD87]\n\t(No symbol) [0x0038A044]\n\t(No symbol) [0x0037E6D5]\n\t(No symbol) [0x003AD84C]\n\t(No symbol) [0x0037E164]\n\t(No symbol) [0x003ADAC4]\n\t(No symbol) [0x003CF138]\n\t(No symbol) [0x003AD646]\n\t(No symbol) [0x0037C59F]\n\t(No symbol) [0x0037D8E4]\n\tGetHandleVerifier [0x007DD883+3179043]\n\tGetHandleVerifier [0x007F6CF9+3282585]\n\tGetHandleVerifier [0x007F167C+3260444]\n\tGetHandleVerifier [0x00574330+650448]\n\t(No symbol) [0x0046ED0D]\n\t(No symbol) [0x0046BAF8]\n\t(No symbol) [0x0046BC99]\n\t(No symbol) [0x0045E530]\n\tBaseThreadInitThunk [0x76815D49+25]\n\tRtlInitializeExceptionChain [0x7776CE3B+107]\n\tRtlGetAppContainerNamedObjectPath [0x7776CDC1+561]",
  "statusTrace" : "self = <TestCase.AMCModelGallery.SearchTermAnalysis.test_Excel.TestExcel object at 0x00000247376B3020>\ndrivers = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"ad0bb29edc88b8fd5fc49c64f94a655e\")>\nentrance = 'SearchTermAnalysisOverall'\n\n    @pytest.mark.parametrize('entrance', ['SearchTermAnalysisOverall','SearchTermAnalysisRelatedSearch'])\n    @allure.story('导出')\n    def test_Export(self, drivers,entrance):\n        \"\"\"\n        1、导出\n        \"\"\"\n        common = SearchTermAnalysis(drivers)\n        common.ChooseModel(name='SearchTermAnalysis')\n>       common.Export(entrance)\n\nTestCase\\AMCModelGallery\\SearchTermAnalysis\\test_Excel.py:80: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npage_object\\通用.py:200: in Export\n    self.is_click(elementcommon['导出'])\npage\\webpage.py:157: in is_click\n    self.find_element(locator).click()\nD:\\Python\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:119: in click\n    self._execute(Command.CLICK_ELEMENT)\nD:\\Python\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:572: in _execute\n    return self._parent.execute(command, params)\nD:\\Python\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:429: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000024737836AD0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...9+25]\\\\n\\\\tRtlInitializeExceptionChain [0x7776CE3B+107]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x7776CDC1+561]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <i data-v-6f53ffbd=\"\" data-v-4b773e76=\"\" class=\"el-tooltip el-icon-download xp-export\" aria-describedby=\"el-tooltip-5957\" tabindex=\"null\"></i> is not clickable at point (1998, 868). Other element would receive the click: <div class=\"el-loading-mask el-loading-fade-leave-active el-loading-fade-leave-to\" style=\"\">...</div>\nE         (Session info: chrome=134.0.6998.89)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x004DB5A3+24387]\nE       \t(No symbol) [0x00465904]\nE       \t(No symbol) [0x00340753]\nE       \t(No symbol) [0x0038EE50]\nE       \t(No symbol) [0x0038D1F4]\nE       \t(No symbol) [0x0038AD87]\nE       \t(No symbol) [0x0038A044]\nE       \t(No symbol) [0x0037E6D5]\nE       \t(No symbol) [0x003AD84C]\nE       \t(No symbol) [0x0037E164]\nE       \t(No symbol) [0x003ADAC4]\nE       \t(No symbol) [0x003CF138]\nE       \t(No symbol) [0x003AD646]\nE       \t(No symbol) [0x0037C59F]\nE       \t(No symbol) [0x0037D8E4]\nE       \tGetHandleVerifier [0x007DD883+3179043]\nE       \tGetHandleVerifier [0x007F6CF9+3282585]\nE       \tGetHandleVerifier [0x007F167C+3260444]\nE       \tGetHandleVerifier [0x00574330+650448]\nE       \t(No symbol) [0x0046ED0D]\nE       \t(No symbol) [0x0046BAF8]\nE       \t(No symbol) [0x0046BC99]\nE       \t(No symbol) [0x0045E530]\nE       \tBaseThreadInitThunk [0x76815D49+25]\nE       \tRtlInitializeExceptionChain [0x7776CE3B+107]\nE       \tRtlGetAppContainerNamedObjectPath [0x7776CDC1+561]\n\nD:\\Python\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: ElementClickInterceptedException",
  "flaky" : true,
  "beforeStages" : [ {
    "name" : "login",
    "time" : {
      "start" : 1742520753283,
      "stop" : 1742520823524,
      "duration" : 70241
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "登录",
      "time" : {
        "start" : 1742520753288,
        "stop" : 1742520790404,
        "duration" : 37116
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "url",
        "value" : "'https://wtest.xnurta.com/login'"
      } ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true,
      "stepsCount" : 0
    }, {
      "name" : "进入AMC模型库",
      "time" : {
        "start" : 1742520790404,
        "stop" : 1742520810888,
        "duration" : 20484
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "进入AMC模型库,点击AMC数据工作室-AMC模型库",
        "time" : {
          "start" : 1742520790405,
          "stop" : 1742520810888,
          "duration" : 20483
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false,
        "stepsCount" : 0
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true,
      "stepsCount" : 1
    }, {
      "name" : "搜索店铺",
      "time" : {
        "start" : 1742520810889,
        "stop" : 1742520823523,
        "duration" : 12634
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "搜索进入店铺：sparkxeubaleafeu",
        "time" : {
          "start" : 1742520810889,
          "stop" : 1742520823523,
          "duration" : 12634
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false,
        "stepsCount" : 0
      } ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "name",
        "value" : "'sparkxeubaleafeu'"
      } ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true,
      "stepsCount" : 1
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true,
    "stepsCount" : 5
  }, {
    "name" : "drivers",
    "time" : {
      "start" : 1742520750781,
      "stop" : 1742520753283,
      "duration" : 2502
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "testStage" : {
    "description" : "搜索词分析模型底部excel",
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <i data-v-6f53ffbd=\"\" data-v-4b773e76=\"\" class=\"el-tooltip el-icon-download xp-export\" aria-describedby=\"el-tooltip-5957\" tabindex=\"null\"></i> is not clickable at point (1998, 868). Other element would receive the click: <div class=\"el-loading-mask el-loading-fade-leave-active el-loading-fade-leave-to\" style=\"\">...</div>\n  (Session info: chrome=134.0.6998.89)\nStacktrace:\n\tGetHandleVerifier [0x004DB5A3+24387]\n\t(No symbol) [0x00465904]\n\t(No symbol) [0x00340753]\n\t(No symbol) [0x0038EE50]\n\t(No symbol) [0x0038D1F4]\n\t(No symbol) [0x0038AD87]\n\t(No symbol) [0x0038A044]\n\t(No symbol) [0x0037E6D5]\n\t(No symbol) [0x003AD84C]\n\t(No symbol) [0x0037E164]\n\t(No symbol) [0x003ADAC4]\n\t(No symbol) [0x003CF138]\n\t(No symbol) [0x003AD646]\n\t(No symbol) [0x0037C59F]\n\t(No symbol) [0x0037D8E4]\n\tGetHandleVerifier [0x007DD883+3179043]\n\tGetHandleVerifier [0x007F6CF9+3282585]\n\tGetHandleVerifier [0x007F167C+3260444]\n\tGetHandleVerifier [0x00574330+650448]\n\t(No symbol) [0x0046ED0D]\n\t(No symbol) [0x0046BAF8]\n\t(No symbol) [0x0046BC99]\n\t(No symbol) [0x0045E530]\n\tBaseThreadInitThunk [0x76815D49+25]\n\tRtlInitializeExceptionChain [0x7776CE3B+107]\n\tRtlGetAppContainerNamedObjectPath [0x7776CDC1+561]",
    "statusTrace" : "self = <TestCase.AMCModelGallery.SearchTermAnalysis.test_Excel.TestExcel object at 0x00000247376B3020>\ndrivers = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"ad0bb29edc88b8fd5fc49c64f94a655e\")>\nentrance = 'SearchTermAnalysisOverall'\n\n    @pytest.mark.parametrize('entrance', ['SearchTermAnalysisOverall','SearchTermAnalysisRelatedSearch'])\n    @allure.story('导出')\n    def test_Export(self, drivers,entrance):\n        \"\"\"\n        1、导出\n        \"\"\"\n        common = SearchTermAnalysis(drivers)\n        common.ChooseModel(name='SearchTermAnalysis')\n>       common.Export(entrance)\n\nTestCase\\AMCModelGallery\\SearchTermAnalysis\\test_Excel.py:80: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npage_object\\通用.py:200: in Export\n    self.is_click(elementcommon['导出'])\npage\\webpage.py:157: in is_click\n    self.find_element(locator).click()\nD:\\Python\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:119: in click\n    self._execute(Command.CLICK_ELEMENT)\nD:\\Python\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:572: in _execute\n    return self._parent.execute(command, params)\nD:\\Python\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:429: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000024737836AD0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...9+25]\\\\n\\\\tRtlInitializeExceptionChain [0x7776CE3B+107]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x7776CDC1+561]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <i data-v-6f53ffbd=\"\" data-v-4b773e76=\"\" class=\"el-tooltip el-icon-download xp-export\" aria-describedby=\"el-tooltip-5957\" tabindex=\"null\"></i> is not clickable at point (1998, 868). Other element would receive the click: <div class=\"el-loading-mask el-loading-fade-leave-active el-loading-fade-leave-to\" style=\"\">...</div>\nE         (Session info: chrome=134.0.6998.89)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x004DB5A3+24387]\nE       \t(No symbol) [0x00465904]\nE       \t(No symbol) [0x00340753]\nE       \t(No symbol) [0x0038EE50]\nE       \t(No symbol) [0x0038D1F4]\nE       \t(No symbol) [0x0038AD87]\nE       \t(No symbol) [0x0038A044]\nE       \t(No symbol) [0x0037E6D5]\nE       \t(No symbol) [0x003AD84C]\nE       \t(No symbol) [0x0037E164]\nE       \t(No symbol) [0x003ADAC4]\nE       \t(No symbol) [0x003CF138]\nE       \t(No symbol) [0x003AD646]\nE       \t(No symbol) [0x0037C59F]\nE       \t(No symbol) [0x0037D8E4]\nE       \tGetHandleVerifier [0x007DD883+3179043]\nE       \tGetHandleVerifier [0x007F6CF9+3282585]\nE       \tGetHandleVerifier [0x007F167C+3260444]\nE       \tGetHandleVerifier [0x00574330+650448]\nE       \t(No symbol) [0x0046ED0D]\nE       \t(No symbol) [0x0046BAF8]\nE       \t(No symbol) [0x0046BC99]\nE       \t(No symbol) [0x0045E530]\nE       \tBaseThreadInitThunk [0x76815D49+25]\nE       \tRtlInitializeExceptionChain [0x7776CE3B+107]\nE       \tRtlGetAppContainerNamedObjectPath [0x7776CDC1+561]\n\nD:\\Python\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: ElementClickInterceptedException",
    "steps" : [ {
      "name" : "选择模型",
      "time" : {
        "start" : 1742520823542,
        "stop" : 1742520828457,
        "duration" : 4915
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "name",
        "value" : "'SearchTermAnalysis'"
      } ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true,
      "stepsCount" : 0
    }, {
      "name" : "导出",
      "time" : {
        "start" : 1742520828457,
        "stop" : 1742520835655,
        "duration" : 7198
      },
      "status" : "broken",
      "statusMessage" : "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <i data-v-6f53ffbd=\"\" data-v-4b773e76=\"\" class=\"el-tooltip el-icon-download xp-export\" aria-describedby=\"el-tooltip-5957\" tabindex=\"null\"></i> is not clickable at point (1998, 868). Other element would receive the click: <div class=\"el-loading-mask el-loading-fade-leave-active el-loading-fade-leave-to\" style=\"\">...</div>\n  (Session info: chrome=134.0.6998.89)\nStacktrace:\n\tGetHandleVerifier [0x004DB5A3+24387]\n\t(No symbol) [0x00465904]\n\t(No symbol) [0x00340753]\n\t(No symbol) [0x0038EE50]\n\t(No symbol) [0x0038D1F4]\n\t(No symbol) [0x0038AD87]\n\t(No symbol) [0x0038A044]\n\t(No symbol) [0x0037E6D5]\n\t(No symbol) [0x003AD84C]\n\t(No symbol) [0x0037E164]\n\t(No symbol) [0x003ADAC4]\n\t(No symbol) [0x003CF138]\n\t(No symbol) [0x003AD646]\n\t(No symbol) [0x0037C59F]\n\t(No symbol) [0x0037D8E4]\n\tGetHandleVerifier [0x007DD883+3179043]\n\tGetHandleVerifier [0x007F6CF9+3282585]\n\tGetHandleVerifier [0x007F167C+3260444]\n\tGetHandleVerifier [0x00574330+650448]\n\t(No symbol) [0x0046ED0D]\n\t(No symbol) [0x0046BAF8]\n\t(No symbol) [0x0046BC99]\n\t(No symbol) [0x0045E530]\n\tBaseThreadInitThunk [0x76815D49+25]\n\tRtlInitializeExceptionChain [0x7776CE3B+107]\n\tRtlGetAppContainerNamedObjectPath [0x7776CDC1+561]\n\n",
      "statusTrace" : "  File \"D:\\Python\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"E:\\AMC_Xnurta\\page_object\\通用.py\", line 200, in Export\n    self.is_click(elementcommon['导出'])\n    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\AMC_Xnurta\\page\\webpage.py\", line 157, in is_click\n    self.find_element(locator).click()\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^\n  File \"D:\\Python\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 119, in click\n    self._execute(Command.CLICK_ELEMENT)\n    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\Python\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 572, in _execute\n    return self._parent.execute(command, params)\n           ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^\n  File \"D:\\Python\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 429, in execute\n    self.error_handler.check_response(response)\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^\n  File \"D:\\Python\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 232, in check_response\n    raise exception_class(message, screen, stacktrace)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "entrance",
        "value" : "'SearchTermAnalysisOverall'"
      } ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true,
      "stepsCount" : 0
    } ],
    "attachments" : [ {
      "uid" : "c7a5986ce2ab65f2",
      "name" : "测试失败截图...20250321093357",
      "source" : "c7a5986ce2ab65f2.png",
      "type" : "image/png",
      "size" : 526452
    }, {
      "uid" : "46e6123678642648",
      "name" : "log",
      "source" : "46e6123678642648.txt",
      "type" : "text/plain",
      "size" : 50780
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "hasContent" : true,
    "stepsCount" : 2
  },
  "afterStages" : [ {
    "name" : "drivers::fn",
    "time" : {
      "start" : 1742520840255,
      "stop" : 1742520856185,
      "duration" : 15930
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "导出"
  }, {
    "name" : "parentSuite",
    "value" : "TestCase.AMCModelGallery.SearchTermAnalysis"
  }, {
    "name" : "suite",
    "value" : "test_Excel"
  }, {
    "name" : "subSuite",
    "value" : "TestExcel"
  }, {
    "name" : "host",
    "value" : "LAPTOP-T9E779QS"
  }, {
    "name" : "thread",
    "value" : "8104-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "TestCase.AMCModelGallery.SearchTermAnalysis.test_Excel"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "entrance",
    "value" : "'SearchTermAnalysisOverall'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "884c0a8e39d78cf2",
      "status" : "broken",
      "statusDetails" : "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x004DB5A3+24387]\n\t(No symbol) [0x00465904]\n\t(No symbol) [0x00340753]\n\t(No symbol) [0x00388BA9]\n\t(No symbol) [0x00388EFB]\n\t(No symbol) [0x003D19C2]\n\t(No symbol) [0x003AD894]\n\t(No symbol) [0x003CF138]\n\t(No symbol) [0x003AD646]\n\t(No symbol) [0x0037C59F]\n\t(No symbol) [0x0037D8E4]\n\tGetHandleVerifier [0x007DD883+3179043]\n\tGetHandleVerifier [0x007F6CF9+3282585]\n\tGetHandleVerifier [0x007F167C+3260444]\n\tGetHandleVerifier [0x00574330+650448]\n\t(No symbol) [0x0046ED0D]\n\t(No symbol) [0x0046BAF8]\n\t(No symbol) [0x0046BC99]\n\t(No symbol) [0x0045E530]\n\tBaseThreadInitThunk [0x76815D49+25]\n\tRtlInitializeExceptionChain [0x7776CE3B+107]\n\tRtlGetAppContainerNamedObjectPath [0x7776CDC1+561]",
      "time" : {
        "start" : 1742520642087,
        "stop" : 1742520642087,
        "duration" : 0
      }
    } ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "6e6edcf8fcd07ab1.json",
  "parameterValues" : [ "'SearchTermAnalysisOverall'" ]
}