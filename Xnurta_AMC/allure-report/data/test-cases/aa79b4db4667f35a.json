{
  "uid" : "aa79b4db4667f35a",
  "name" : "test_ComposeModelQuery",
  "fullName" : "TestCase.AMCModelGallery.CustomerLifetimeValue.test_CreateModel.TestCreateModel#test_ComposeModelQuery",
  "historyId" : "78f66a41031bb9aa966d50e6c3f14f7f",
  "time" : {
    "start" : 1742520881917,
    "stop" : 1742520921992,
    "duration" : 40075
  },
  "description" : "创建模型",
  "descriptionHtml" : "<p>创建模型</p>\n",
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x004DB5A3+24387]\n\t(No symbol) [0x00465904]\n\t(No symbol) [0x00340753]\n\t(No symbol) [0x00388BA9]\n\t(No symbol) [0x00388EFB]\n\t(No symbol) [0x003D19C2]\n\t(No symbol) [0x003AD894]\n\t(No symbol) [0x003CF138]\n\t(No symbol) [0x003AD646]\n\t(No symbol) [0x0037C59F]\n\t(No symbol) [0x0037D8E4]\n\tGetHandleVerifier [0x007DD883+3179043]\n\tGetHandleVerifier [0x007F6CF9+3282585]\n\tGetHandleVerifier [0x007F167C+3260444]\n\tGetHandleVerifier [0x00574330+650448]\n\t(No symbol) [0x0046ED0D]\n\t(No symbol) [0x0046BAF8]\n\t(No symbol) [0x0046BC99]\n\t(No symbol) [0x0045E530]\n\tBaseThreadInitThunk [0x76815D49+25]\n\tRtlInitializeExceptionChain [0x7776CE3B+107]\n\tRtlGetAppContainerNamedObjectPath [0x7776CDC1+561]",
  "statusTrace" : "self = <test_CreateModel.TestCreateModel object at 0x000001F8B8A29D10>\ndrivers = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"94dccdeea422d02ccbc921d5412858c5\")>\n\n    @allure.story('顾客终身价值分析模型-定义模型条件')\n    def test_ComposeModelQuery(self, drivers):\n        \"\"\"\n        1、定义模型条件\n        \"\"\"\n        common = Common(drivers)\n        common.ChooseModel(name='CustomerLifetimeValue')\n>       common.ComposeModelQuery(modeltype='顾客终身价值分析')\n\nTestCase\\AMCModelGallery\\CustomerLifetimeValue\\test_CreateModel.py:41: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npage_object\\通用.py:285: in ComposeModelQuery\n    assert '选择时间不得少于180天，不得超过390' in self.element_text(elementCustomerLifetimeValue['自定义模型_时间范围提示'])\npage\\webpage.py:164: in element_text\n    _text = self.find_element(locator).text\npage\\webpage.py:94: in find_element\n    return WebPage.element_locator(lambda *args: self.wait.until(\npage\\webpage.py:85: in element_locator\n    return func(cm.LOCATE_MODE[name], value)\npage\\webpage.py:94: in <lambda>\n    return WebPage.element_locator(lambda *args: self.wait.until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"94dccdeea422d02ccbc921d5412858c5\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x000001F8B8B48AE0>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        ----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x004DB5A3+24387]\nE       \t(No symbol) [0x00465904]\nE       \t(No symbol) [0x00340753]\nE       \t(No symbol) [0x00388BA9]\nE       \t(No symbol) [0x00388EFB]\nE       \t(No symbol) [0x003D19C2]\nE       \t(No symbol) [0x003AD894]\nE       \t(No symbol) [0x003CF138]\nE       \t(No symbol) [0x003AD646]\nE       \t(No symbol) [0x0037C59F]\nE       \t(No symbol) [0x0037D8E4]\nE       \tGetHandleVerifier [0x007DD883+3179043]\nE       \tGetHandleVerifier [0x007F6CF9+3282585]\nE       \tGetHandleVerifier [0x007F167C+3260444]\nE       \tGetHandleVerifier [0x00574330+650448]\nE       \t(No symbol) [0x0046ED0D]\nE       \t(No symbol) [0x0046BAF8]\nE       \t(No symbol) [0x0046BC99]\nE       \t(No symbol) [0x0045E530]\nE       \tBaseThreadInitThunk [0x76815D49+25]\nE       \tRtlInitializeExceptionChain [0x7776CE3B+107]\nE       \tRtlGetAppContainerNamedObjectPath [0x7776CDC1+561]\n\nD:\\Python\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:146: TimeoutException",
  "flaky" : false,
  "beforeStages" : [ {
    "name" : "login",
    "time" : {
      "start" : 1742520811575,
      "stop" : 1742520881914,
      "duration" : 70339
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "登录",
      "time" : {
        "start" : 1742520811589,
        "stop" : 1742520850642,
        "duration" : 39053
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "url",
        "value" : "'https://wtest.xnurta.com/login'"
      } ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true,
      "stepsCount" : 0
    }, {
      "name" : "进入AMC模型库",
      "time" : {
        "start" : 1742520850642,
        "stop" : 1742520865852,
        "duration" : 15210
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "进入AMC模型库,点击AMC数据工作室-AMC模型库",
        "time" : {
          "start" : 1742520850643,
          "stop" : 1742520865851,
          "duration" : 15208
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false,
        "stepsCount" : 0
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true,
      "stepsCount" : 1
    }, {
      "name" : "搜索店铺",
      "time" : {
        "start" : 1742520865863,
        "stop" : 1742520881914,
        "duration" : 16051
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "搜索进入店铺：sparkxeubaleafeu",
        "time" : {
          "start" : 1742520865864,
          "stop" : 1742520881914,
          "duration" : 16050
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false,
        "stepsCount" : 0
      } ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "name",
        "value" : "'sparkxeubaleafeu'"
      } ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true,
      "stepsCount" : 1
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true,
    "stepsCount" : 5
  }, {
    "name" : "drivers",
    "time" : {
      "start" : 1742520809191,
      "stop" : 1742520811575,
      "duration" : 2384
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "testStage" : {
    "description" : "创建模型",
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x004DB5A3+24387]\n\t(No symbol) [0x00465904]\n\t(No symbol) [0x00340753]\n\t(No symbol) [0x00388BA9]\n\t(No symbol) [0x00388EFB]\n\t(No symbol) [0x003D19C2]\n\t(No symbol) [0x003AD894]\n\t(No symbol) [0x003CF138]\n\t(No symbol) [0x003AD646]\n\t(No symbol) [0x0037C59F]\n\t(No symbol) [0x0037D8E4]\n\tGetHandleVerifier [0x007DD883+3179043]\n\tGetHandleVerifier [0x007F6CF9+3282585]\n\tGetHandleVerifier [0x007F167C+3260444]\n\tGetHandleVerifier [0x00574330+650448]\n\t(No symbol) [0x0046ED0D]\n\t(No symbol) [0x0046BAF8]\n\t(No symbol) [0x0046BC99]\n\t(No symbol) [0x0045E530]\n\tBaseThreadInitThunk [0x76815D49+25]\n\tRtlInitializeExceptionChain [0x7776CE3B+107]\n\tRtlGetAppContainerNamedObjectPath [0x7776CDC1+561]",
    "statusTrace" : "self = <test_CreateModel.TestCreateModel object at 0x000001F8B8A29D10>\ndrivers = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"94dccdeea422d02ccbc921d5412858c5\")>\n\n    @allure.story('顾客终身价值分析模型-定义模型条件')\n    def test_ComposeModelQuery(self, drivers):\n        \"\"\"\n        1、定义模型条件\n        \"\"\"\n        common = Common(drivers)\n        common.ChooseModel(name='CustomerLifetimeValue')\n>       common.ComposeModelQuery(modeltype='顾客终身价值分析')\n\nTestCase\\AMCModelGallery\\CustomerLifetimeValue\\test_CreateModel.py:41: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npage_object\\通用.py:285: in ComposeModelQuery\n    assert '选择时间不得少于180天，不得超过390' in self.element_text(elementCustomerLifetimeValue['自定义模型_时间范围提示'])\npage\\webpage.py:164: in element_text\n    _text = self.find_element(locator).text\npage\\webpage.py:94: in find_element\n    return WebPage.element_locator(lambda *args: self.wait.until(\npage\\webpage.py:85: in element_locator\n    return func(cm.LOCATE_MODE[name], value)\npage\\webpage.py:94: in <lambda>\n    return WebPage.element_locator(lambda *args: self.wait.until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"94dccdeea422d02ccbc921d5412858c5\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x000001F8B8B48AE0>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        ----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x004DB5A3+24387]\nE       \t(No symbol) [0x00465904]\nE       \t(No symbol) [0x00340753]\nE       \t(No symbol) [0x00388BA9]\nE       \t(No symbol) [0x00388EFB]\nE       \t(No symbol) [0x003D19C2]\nE       \t(No symbol) [0x003AD894]\nE       \t(No symbol) [0x003CF138]\nE       \t(No symbol) [0x003AD646]\nE       \t(No symbol) [0x0037C59F]\nE       \t(No symbol) [0x0037D8E4]\nE       \tGetHandleVerifier [0x007DD883+3179043]\nE       \tGetHandleVerifier [0x007F6CF9+3282585]\nE       \tGetHandleVerifier [0x007F167C+3260444]\nE       \tGetHandleVerifier [0x00574330+650448]\nE       \t(No symbol) [0x0046ED0D]\nE       \t(No symbol) [0x0046BAF8]\nE       \t(No symbol) [0x0046BC99]\nE       \t(No symbol) [0x0045E530]\nE       \tBaseThreadInitThunk [0x76815D49+25]\nE       \tRtlInitializeExceptionChain [0x7776CE3B+107]\nE       \tRtlGetAppContainerNamedObjectPath [0x7776CDC1+561]\n\nD:\\Python\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:146: TimeoutException",
    "steps" : [ {
      "name" : "选择模型",
      "time" : {
        "start" : 1742520881937,
        "stop" : 1742520887847,
        "duration" : 5910
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "name",
        "value" : "'CustomerLifetimeValue'"
      } ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true,
      "stepsCount" : 0
    } ],
    "attachments" : [ {
      "uid" : "3723dc34c32ffc5",
      "name" : "测试失败截图...20250321093530",
      "source" : "3723dc34c32ffc5.png",
      "type" : "image/png",
      "size" : 344367
    }, {
      "uid" : "7a8baf461f974b79",
      "name" : "log",
      "source" : "7a8baf461f974b79.txt",
      "type" : "text/plain",
      "size" : 40178
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "hasContent" : true,
    "stepsCount" : 1
  },
  "afterStages" : [ {
    "name" : "drivers::fn",
    "time" : {
      "start" : 1742520931464,
      "stop" : 1742520939585,
      "duration" : 8121
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "顾客终身价值分析模型-定义模型条件"
  }, {
    "name" : "parentSuite",
    "value" : "TestCase.AMCModelGallery.CustomerLifetimeValue"
  }, {
    "name" : "suite",
    "value" : "test_CreateModel"
  }, {
    "name" : "subSuite",
    "value" : "TestCreateModel"
  }, {
    "name" : "host",
    "value" : "LAPTOP-T9E779QS"
  }, {
    "name" : "thread",
    "value" : "16364-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "TestCase.AMCModelGallery.CustomerLifetimeValue.test_CreateModel"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "aa79b4db4667f35a.json",
  "parameterValues" : [ ]
}